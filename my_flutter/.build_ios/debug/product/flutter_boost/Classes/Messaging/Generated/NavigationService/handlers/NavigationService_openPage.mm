/*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2019 Alibaba Group
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

 //Generated by AIOCodeGen.
 
 #import "ServiceGateway.h"
 #import "NavigationService_openPage.h"
 #import "FLBFlutterApplication.h"
#import "FlutterBoost.h"
#import "Service_NavigationService.h"
 
 @implementation NavigationService_openPage
 
 - (void)onCall:(void (^)(BOOL))result pageName:(NSString *)pageName params:(NSDictionary *)params animated:(NSNumber *)animated 
 {
     NSString *url = pageName;
     if(pageName == nil){
         pageName = params[@"url"];
     }
     
     if([self needResult:params]){
         [FlutterBoostPlugin.sharedInstance setResultHandler:^(NSString *key , NSDictionary *resultData) {
             [Service_NavigationService onNativePageResult:^(NSNumber *) {}
                                                  uniqueId:@"no use"
                                                       key:url
                                                resultData:resultData
                                                    params:@{}];
         } forKey:url];
     }
     
     [[FLBFlutterApplication sharedApplication].platform openPage:pageName
                                                           params:params
                                                         animated:animated.boolValue
                                                       completion:^(BOOL finished) {
                                                         if(result)result(YES);
                                                       }];
 }

- (BOOL)needResult:(NSDictionary *)params
{
    NSString *const key = @"needResult";
    NSNumber *val = params[key];
    if (val && [val isKindOfClass:NSNumber.class]) {
        return val.boolValue;
    }
    return NO;
}
 
 #pragma mark - Do not edit these method.
 - (void)__flutter_p_handler_openPage:(NSDictionary *)args result:(void (^)(BOOL))result {
     [self onCall:result pageName:args[@"pageName"] params:args[@"params"] animated:args[@"animated"]];
 }
 + (void)load{
     [[ServiceGateway sharedInstance] registerHandler:[NavigationService_openPage new]];
 }
 - (NSString *)returnType
 {
   return @"BOOL";
 }
 - (NSString *)service
 {
   return @"NavigationService";
 }
 
 @end
